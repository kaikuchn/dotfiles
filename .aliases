# function em() {
#     local target_path=${1:-"."}
#     emacsclient -nc --frame-parameters="((fullscreen . maximized))" $target_path
# }
# function kill-em() {
#     emacsclient -e "(kill-emacs)"
# }

# function op() {
#     local item=${1:?'Must pass item to fetch'}
#     onepass get item $item | jq '.details.fields|map(select(.designation=="password").value)[]' | head -n1 | pbcopy
#     (sleep 30; pbcopy < /dev/null) &
#     onepass get item $item | jq '.details.fields|map(select(.designation=="username").value)[]' | head -n1
# }

function git-pullrequest() {
    local account=$(dirname `git config --get remote.origin.url` | cut -d: -f2)
    local repository=$(basename -s .git `git config --get remote.origin.url`)
    local branch=$(git rev-parse --abbrev-ref HEAD)
    git push --set-upstream origin "$branch"
    open "https://github.com/$account/$repository/pull/new/$branch"
}
alias git-pr='git-pullrequest'

alias now='gdate +%s%N'

# alias trash_locks='fuser -f ~/.Trash/* | xargs kill -9'
# alias givx='function _givx(){ git clone git@github.com:ivx/$1.git; };_givx'
alias be='bundle exec'
alias gc='git commit --verbose'
alias gpn='git push 2>&1 | grep "git push" | xargs -I{} bash -c {}'
alias gu='git reset HEAD~1'
alias please='sudo $(fc -ln -1)'

alias glo="git log -30 --graph --pretty=format:'%h %ad %s (%an)' --date=short"
alias make_cert='openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365'

alias init_wasm="source ~/code/spikes/emsdk/emsdk_env.sh"

gen-pass() {
    local length=${1:-16}
    LC_ALL=C; tr -cd '[:alnum:]' < /dev/urandom | fold -w$length | head -n1
}

function sleep-in() {
    local minutes=$1
    local datetime=`date -v+${minutes}M +"%m/%d/%y %H:%M:%S"`
    sudo pmset schedule sleep "$datetime"
}

alias updatedb='sudo /usr/libexec/locate.updatedb'
get() {
  repo=${1:?'Must specify repository to fetch'}
  git clone git@github.com:STUDITEMPS/${repo}.git
}

alias tix='MIX_ENV=test iex -S mix tix'

alias verify_chromedriver='xattr -d com.apple.quarantine $(which chromedriver)'
alias uuid="uuidgen | tr '[:upper:]' '[:lower:]'"
alias start_rabbitmq='docker run -d -p "15672:15672" -p "5672:5672" --ulimit nofile=16384:65536 rabbitmq:3.8-management'

load_dump() {
  local database=${1:?'Must specify database for import'}
  local dump_file=${2:?'Must specify dump file'}

  psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ${database}"
  pg_restore --verbose --clean --no-acl --no-owner -h localhost -U postgres -d ${database} ${dump_file}
}

alias fix_ulimit='sudo launchctl limit maxfiles 65536 200000'
alias start_docker_vm='colima start'
alias login_ghcr='op --account my.1password.com read "op://Personal/GitHub ContainerRegistry PAT/credential" | docker login ghcr.io -u kaikuchn --password-stdin'
alias dcode='devcontainer open'
